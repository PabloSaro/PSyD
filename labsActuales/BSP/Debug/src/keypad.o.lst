   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keypad.c"
  21              	.Ltext0:
  22              		.file 1 "../src/keypad.c"
 1959              		.align	2
 1960              		.global	keypad_init
 1962              	keypad_init:
 1963              	.LFB0:
   1:../src/keypad.c **** 
   2:../src/keypad.c **** #include <s3c44b0x.h>
   3:../src/keypad.c **** #include <s3cev40.h>
   4:../src/keypad.c **** #include <timers.h>
   5:../src/keypad.c **** #include <keypad.h>
   6:../src/keypad.c **** 
   7:../src/keypad.c **** extern void isr_KEYPAD_dummy( void );
   8:../src/keypad.c **** 
   9:../src/keypad.c **** void keypad_init( void )
  10:../src/keypad.c **** {
 1964              		.loc 1 10 0
 1965              		.cfi_startproc
 1966              		@ Function supports interworking.
 1967              		@ args = 0, pretend = 0, frame = 0
 1968              		@ frame_needed = 1, uses_anonymous_args = 0
 1969 0000 0DC0A0E1 		mov	ip, sp
 1970              	.LCFI0:
 1971              		.cfi_def_cfa_register 12
 1972 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1973 0008 04B04CE2 		sub	fp, ip, #4
 1974              		.cfi_offset 14, -8
 1975              		.cfi_offset 13, -12
 1976              		.cfi_offset 11, -16
 1977              	.LCFI1:
 1978              		.cfi_def_cfa 11, 4
  11:../src/keypad.c **** 	timers_init();
 1979              		.loc 1 11 0
 1980 000c FEFFFFEB 		bl	timers_init
  12:../src/keypad.c **** };
 1981              		.loc 1 12 0
 1982 0010 0CD04BE2 		sub	sp, fp, #12
 1983 0014 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1984 0018 1EFF2FE1 		bx	lr
 1985              		.cfi_endproc
 1986              	.LFE0:
 1988              		.align	2
 1989              		.global	keypad_scan
 1991              	keypad_scan:
 1992              	.LFB1:
  13:../src/keypad.c **** 
  14:../src/keypad.c **** uint8 keypad_scan( void )//test
  15:../src/keypad.c **** {
 1993              		.loc 1 15 0
 1994              		.cfi_startproc
 1995              		@ Function supports interworking.
 1996              		@ args = 0, pretend = 0, frame = 8
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 001c 0DC0A0E1 		mov	ip, sp
 1999              	.LCFI2:
 2000              		.cfi_def_cfa_register 12
 2001 0020 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2002 0024 04B04CE2 		sub	fp, ip, #4
 2003              		.cfi_offset 14, -8
 2004              		.cfi_offset 13, -12
 2005              		.cfi_offset 11, -16
 2006              	.LCFI3:
 2007              		.cfi_def_cfa 11, 4
 2008 0028 08D04DE2 		sub	sp, sp, #8
  16:../src/keypad.c ****     uint8 aux;
  17:../src/keypad.c **** 
  18:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0x1c );
 2009              		.loc 1 18 0
 2010 002c FC319FE5 		ldr	r3, .L20
 2011 0030 0030D3E5 		ldrb	r3, [r3, #0]
 2012 0034 0D304BE5 		strb	r3, [fp, #-13]
  19:../src/keypad.c ****     if( (aux & 0x0f) != 0x0f )
 2013              		.loc 1 19 0
 2014 0038 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2015 003c 0F3003E2 		and	r3, r3, #15
 2016 0040 0F0053E3 		cmp	r3, #15
 2017 0044 1700000A 		beq	.L3
  20:../src/keypad.c ****     {
  21:../src/keypad.c ****         if( (aux & 0x8) == 0 )
 2018              		.loc 1 21 0
 2019 0048 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2020 004c 083003E2 		and	r3, r3, #8
 2021 0050 000053E3 		cmp	r3, #0
 2022 0054 0100001A 		bne	.L4
  22:../src/keypad.c ****             return KEYPAD_KEY0;
 2023              		.loc 1 22 0
 2024 0058 0030A0E3 		mov	r3, #0
 2025 005c 6F0000EA 		b	.L5
 2026              	.L4:
  23:../src/keypad.c ****         else if( (aux & 0x4) == 0 )
 2027              		.loc 1 23 0
 2028 0060 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2029 0064 043003E2 		and	r3, r3, #4
 2030 0068 000053E3 		cmp	r3, #0
 2031 006c 0100001A 		bne	.L6
  24:../src/keypad.c ****             return KEYPAD_KEY1;
 2032              		.loc 1 24 0
 2033 0070 0130A0E3 		mov	r3, #1
 2034 0074 690000EA 		b	.L5
 2035              	.L6:
  25:../src/keypad.c ****         else if( (aux & 0x2) == 0 )
 2036              		.loc 1 25 0
 2037 0078 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2038 007c 023003E2 		and	r3, r3, #2
 2039 0080 000053E3 		cmp	r3, #0
 2040 0084 0100001A 		bne	.L7
  26:../src/keypad.c ****             return KEYPAD_KEY2;
 2041              		.loc 1 26 0
 2042 0088 0230A0E3 		mov	r3, #2
 2043 008c 630000EA 		b	.L5
 2044              	.L7:
  27:../src/keypad.c ****         else if( (aux & 0x1) == 0 )
 2045              		.loc 1 27 0
 2046 0090 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2047 0094 013003E2 		and	r3, r3, #1
 2048 0098 000053E3 		cmp	r3, #0
 2049 009c 0100001A 		bne	.L3
  28:../src/keypad.c ****             return KEYPAD_KEY3;
 2050              		.loc 1 28 0
 2051 00a0 0330A0E3 		mov	r3, #3
 2052 00a4 5D0000EA 		b	.L5
 2053              	.L3:
  29:../src/keypad.c ****     }
  30:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0xfb );
 2054              		.loc 1 30 0
 2055 00a8 84319FE5 		ldr	r3, .L20+4
 2056 00ac 0030D3E5 		ldrb	r3, [r3, #0]
 2057 00b0 0D304BE5 		strb	r3, [fp, #-13]
  31:../src/keypad.c ****     if( (aux & 0x0f) != 0x0f )
 2058              		.loc 1 31 0
 2059 00b4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2060 00b8 0F3003E2 		and	r3, r3, #15
 2061 00bc 0F0053E3 		cmp	r3, #15
 2062 00c0 1700000A 		beq	.L8
  32:../src/keypad.c ****     {
  33:../src/keypad.c ****         if( (aux & 0x7) == 0x7)
 2063              		.loc 1 33 0
 2064 00c4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2065 00c8 073003E2 		and	r3, r3, #7
 2066 00cc 070053E3 		cmp	r3, #7
 2067 00d0 0100001A 		bne	.L9
  34:../src/keypad.c ****             return KEYPAD_KEY4;
 2068              		.loc 1 34 0
 2069 00d4 0430A0E3 		mov	r3, #4
 2070 00d8 500000EA 		b	.L5
 2071              	.L9:
  35:../src/keypad.c ****         else if( (aux & 0xb) == 0xb )
 2072              		.loc 1 35 0
 2073 00dc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2074 00e0 0B3003E2 		and	r3, r3, #11
 2075 00e4 0B0053E3 		cmp	r3, #11
 2076 00e8 0100001A 		bne	.L10
  36:../src/keypad.c ****             return KEYPAD_KEY5;
 2077              		.loc 1 36 0
 2078 00ec 0530A0E3 		mov	r3, #5
 2079 00f0 4A0000EA 		b	.L5
 2080              	.L10:
  37:../src/keypad.c ****         else if( (aux & 0xd) ==0xd)
 2081              		.loc 1 37 0
 2082 00f4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2083 00f8 0D3003E2 		and	r3, r3, #13
 2084 00fc 0D0053E3 		cmp	r3, #13
 2085 0100 0100001A 		bne	.L11
  38:../src/keypad.c ****             return KEYPAD_KEY6;
 2086              		.loc 1 38 0
 2087 0104 0630A0E3 		mov	r3, #6
 2088 0108 440000EA 		b	.L5
 2089              	.L11:
  39:../src/keypad.c ****         else if( (aux & 0xe) ==0xe)
 2090              		.loc 1 39 0
 2091 010c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2092 0110 0E3003E2 		and	r3, r3, #14
 2093 0114 0E0053E3 		cmp	r3, #14
 2094 0118 0100001A 		bne	.L8
  40:../src/keypad.c ****             return KEYPAD_KEY7;
 2095              		.loc 1 40 0
 2096 011c 0730A0E3 		mov	r3, #7
 2097 0120 3E0000EA 		b	.L5
 2098              	.L8:
  41:../src/keypad.c ****     }
  42:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0x16 );
 2099              		.loc 1 42 0
 2100 0124 0C319FE5 		ldr	r3, .L20+8
 2101 0128 0030D3E5 		ldrb	r3, [r3, #0]
 2102 012c 0D304BE5 		strb	r3, [fp, #-13]
  43:../src/keypad.c ****     if( (aux & 0x0f) != 0x0f )
 2103              		.loc 1 43 0
 2104 0130 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2105 0134 0F3003E2 		and	r3, r3, #15
 2106 0138 0F0053E3 		cmp	r3, #15
 2107 013c 1700000A 		beq	.L12
  44:../src/keypad.c ****     {
  45:../src/keypad.c ****     	if( (aux & 0x7) == 0x7)
 2108              		.loc 1 45 0
 2109 0140 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2110 0144 073003E2 		and	r3, r3, #7
 2111 0148 070053E3 		cmp	r3, #7
 2112 014c 0100001A 		bne	.L13
  46:../src/keypad.c ****             return KEYPAD_KEY8;
 2113              		.loc 1 46 0
 2114 0150 0830A0E3 		mov	r3, #8
 2115 0154 310000EA 		b	.L5
 2116              	.L13:
  47:../src/keypad.c ****     	 else if( (aux & 0xb) == 0xb )
 2117              		.loc 1 47 0
 2118 0158 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2119 015c 0B3003E2 		and	r3, r3, #11
 2120 0160 0B0053E3 		cmp	r3, #11
 2121 0164 0100001A 		bne	.L14
  48:../src/keypad.c ****             return KEYPAD_KEY9;
 2122              		.loc 1 48 0
 2123 0168 0930A0E3 		mov	r3, #9
 2124 016c 2B0000EA 		b	.L5
 2125              	.L14:
  49:../src/keypad.c ****     	 else if( (aux & 0xd) ==0xd)
 2126              		.loc 1 49 0
 2127 0170 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2128 0174 0D3003E2 		and	r3, r3, #13
 2129 0178 0D0053E3 		cmp	r3, #13
 2130 017c 0100001A 		bne	.L15
  50:../src/keypad.c ****             return KEYPAD_KEYA;
 2131              		.loc 1 50 0
 2132 0180 0A30A0E3 		mov	r3, #10
 2133 0184 250000EA 		b	.L5
 2134              	.L15:
  51:../src/keypad.c ****     	 else if( (aux & 0xe) ==0xe)
 2135              		.loc 1 51 0
 2136 0188 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2137 018c 0E3003E2 		and	r3, r3, #14
 2138 0190 0E0053E3 		cmp	r3, #14
 2139 0194 0100001A 		bne	.L12
  52:../src/keypad.c ****             return KEYPAD_KEYB;
 2140              		.loc 1 52 0
 2141 0198 0B30A0E3 		mov	r3, #11
 2142 019c 1F0000EA 		b	.L5
 2143              	.L12:
  53:../src/keypad.c ****     }
  54:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0x0e );
 2144              		.loc 1 54 0
 2145 01a0 94309FE5 		ldr	r3, .L20+12
 2146 01a4 0030D3E5 		ldrb	r3, [r3, #0]
 2147 01a8 0D304BE5 		strb	r3, [fp, #-13]
  55:../src/keypad.c ****     if( (aux & 0x0f) != 0x0f )
 2148              		.loc 1 55 0
 2149 01ac 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2150 01b0 0F3003E2 		and	r3, r3, #15
 2151 01b4 0F0053E3 		cmp	r3, #15
 2152 01b8 1700000A 		beq	.L16
  56:../src/keypad.c ****        {
  57:../src/keypad.c ****     	if( (aux & 0x7) == 0x7)
 2153              		.loc 1 57 0
 2154 01bc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2155 01c0 073003E2 		and	r3, r3, #7
 2156 01c4 070053E3 		cmp	r3, #7
 2157 01c8 0100001A 		bne	.L17
  58:../src/keypad.c ****              return KEYPAD_KEYC;
 2158              		.loc 1 58 0
 2159 01cc 0C30A0E3 		mov	r3, #12
 2160 01d0 120000EA 		b	.L5
 2161              	.L17:
  59:../src/keypad.c ****          else if( (aux & 0xb) == 0xb )
 2162              		.loc 1 59 0
 2163 01d4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2164 01d8 0B3003E2 		and	r3, r3, #11
 2165 01dc 0B0053E3 		cmp	r3, #11
 2166 01e0 0100001A 		bne	.L18
  60:../src/keypad.c ****              return KEYPAD_KEYD;
 2167              		.loc 1 60 0
 2168 01e4 0D30A0E3 		mov	r3, #13
 2169 01e8 0C0000EA 		b	.L5
 2170              	.L18:
  61:../src/keypad.c ****          else if( (aux & 0xd) ==0xd)
 2171              		.loc 1 61 0
 2172 01ec 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2173 01f0 0D3003E2 		and	r3, r3, #13
 2174 01f4 0D0053E3 		cmp	r3, #13
 2175 01f8 0100001A 		bne	.L19
  62:../src/keypad.c ****               return KEYPAD_KEYE;
 2176              		.loc 1 62 0
 2177 01fc 0E30A0E3 		mov	r3, #14
 2178 0200 060000EA 		b	.L5
 2179              	.L19:
  63:../src/keypad.c ****          else if( (aux & 0xe) ==0xe)
 2180              		.loc 1 63 0
 2181 0204 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2182 0208 0E3003E2 		and	r3, r3, #14
 2183 020c 0E0053E3 		cmp	r3, #14
 2184 0210 0100001A 		bne	.L16
  64:../src/keypad.c ****               return KEYPAD_KEYF;
 2185              		.loc 1 64 0
 2186 0214 0F30A0E3 		mov	r3, #15
 2187 0218 000000EA 		b	.L5
 2188              	.L16:
  65:../src/keypad.c ****         }
  66:../src/keypad.c ****     return KEYPAD_FAILURE;
 2189              		.loc 1 66 0
 2190 021c FF30A0E3 		mov	r3, #255
 2191              	.L5:
  67:../src/keypad.c **** }
 2192              		.loc 1 67 0
 2193 0220 0300A0E1 		mov	r0, r3
 2194 0224 0CD04BE2 		sub	sp, fp, #12
 2195 0228 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2196 022c 1EFF2FE1 		bx	lr
 2197              	.L21:
 2198              		.align	2
 2199              	.L20:
 2200 0230 1C000006 		.word	100663324
 2201 0234 FB000006 		.word	100663547
 2202 0238 16000006 		.word	100663318
 2203 023c 0E000006 		.word	100663310
 2204              		.cfi_endproc
 2205              	.LFE1:
 2207              		.align	2
 2208              		.global	keypad_status
 2210              	keypad_status:
 2211              	.LFB2:
  68:../src/keypad.c **** 
  69:../src/keypad.c **** uint8 keypad_status( uint8 scancode )//bien
  70:../src/keypad.c **** {
 2212              		.loc 1 70 0
 2213              		.cfi_startproc
 2214              		@ Function supports interworking.
 2215              		@ args = 0, pretend = 0, frame = 16
 2216              		@ frame_needed = 1, uses_anonymous_args = 0
 2217 0240 0DC0A0E1 		mov	ip, sp
 2218              	.LCFI4:
 2219              		.cfi_def_cfa_register 12
 2220 0244 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2221 0248 04B04CE2 		sub	fp, ip, #4
 2222              		.cfi_offset 14, -8
 2223              		.cfi_offset 13, -12
 2224              		.cfi_offset 11, -16
 2225              	.LCFI5:
 2226              		.cfi_def_cfa 11, 4
 2227 024c 10D04DE2 		sub	sp, sp, #16
 2228 0250 0030A0E1 		mov	r3, r0
 2229 0254 15304BE5 		strb	r3, [fp, #-21]
  71:../src/keypad.c **** 	uint8 status;
  72:../src/keypad.c ****     if(keypad_scan()== scancode){
 2230              		.loc 1 72 0
 2231 0258 FEFFFFEB 		bl	keypad_scan
 2232 025c 0030A0E1 		mov	r3, r0
 2233 0260 15205BE5 		ldrb	r2, [fp, #-21]	@ zero_extendqisi2
 2234 0264 030052E1 		cmp	r2, r3
 2235 0268 0200001A 		bne	.L23
  73:../src/keypad.c ****     	status = 1;
 2236              		.loc 1 73 0
 2237 026c 0130A0E3 		mov	r3, #1
 2238 0270 0D304BE5 		strb	r3, [fp, #-13]
 2239 0274 010000EA 		b	.L24
 2240              	.L23:
  74:../src/keypad.c ****     }
  75:../src/keypad.c ****     else{
  76:../src/keypad.c ****     	status=0;
 2241              		.loc 1 76 0
 2242 0278 0030A0E3 		mov	r3, #0
 2243 027c 0D304BE5 		strb	r3, [fp, #-13]
 2244              	.L24:
  77:../src/keypad.c ****     }
  78:../src/keypad.c ****     return status;
 2245              		.loc 1 78 0
 2246 0280 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
  79:../src/keypad.c **** }
 2247              		.loc 1 79 0
 2248 0284 0300A0E1 		mov	r0, r3
 2249 0288 0CD04BE2 		sub	sp, fp, #12
 2250 028c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2251 0290 1EFF2FE1 		bx	lr
 2252              		.cfi_endproc
 2253              	.LFE2:
 2255              		.align	2
 2256              		.global	keypad_wait_keydown
 2258              	keypad_wait_keydown:
 2259              	.LFB3:
  80:../src/keypad.c **** 
  81:../src/keypad.c **** void keypad_wait_keydown( uint8 scancode )//bien
  82:../src/keypad.c **** {
 2260              		.loc 1 82 0
 2261              		.cfi_startproc
 2262              		@ Function supports interworking.
 2263              		@ args = 0, pretend = 0, frame = 8
 2264              		@ frame_needed = 1, uses_anonymous_args = 0
 2265 0294 0DC0A0E1 		mov	ip, sp
 2266              	.LCFI6:
 2267              		.cfi_def_cfa_register 12
 2268 0298 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2269 029c 04B04CE2 		sub	fp, ip, #4
 2270              		.cfi_offset 14, -8
 2271              		.cfi_offset 13, -12
 2272              		.cfi_offset 11, -16
 2273              	.LCFI7:
 2274              		.cfi_def_cfa 11, 4
 2275 02a0 08D04DE2 		sub	sp, sp, #8
 2276 02a4 0030A0E1 		mov	r3, r0
 2277 02a8 0D304BE5 		strb	r3, [fp, #-13]
  83:../src/keypad.c ****      while( 1 ) 
  84:../src/keypad.c ****      {
  85:../src/keypad.c ****         while( keypad_scan()!= scancode );
 2278              		.loc 1 85 0
 2279 02ac 0000A0E1 		mov	r0, r0	@ nop
 2280              	.L26:
 2281              		.loc 1 85 0 is_stmt 0 discriminator 1
 2282 02b0 FEFFFFEB 		bl	keypad_scan
 2283 02b4 0030A0E1 		mov	r3, r0
 2284 02b8 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 2285 02bc 030052E1 		cmp	r2, r3
 2286 02c0 FAFFFF1A 		bne	.L26
  86:../src/keypad.c ****         sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2287              		.loc 1 86 0 is_stmt 1
 2288 02c4 1E00A0E3 		mov	r0, #30
 2289 02c8 FEFFFFEB 		bl	sw_delay_ms
  87:../src/keypad.c ****         if ( scancode == keypad_scan() )
 2290              		.loc 1 87 0
 2291 02cc FEFFFFEB 		bl	keypad_scan
 2292 02d0 0030A0E1 		mov	r3, r0
 2293 02d4 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 2294 02d8 030052E1 		cmp	r2, r3
 2295 02dc 0800000A 		beq	.L30
  88:../src/keypad.c ****             return;
  89:../src/keypad.c ****         while( keypad_scan()!= KEYPAD_FAILURE );
 2296              		.loc 1 89 0
 2297 02e0 0000A0E1 		mov	r0, r0	@ nop
 2298              	.L28:
 2299              		.loc 1 89 0 is_stmt 0 discriminator 1
 2300 02e4 FEFFFFEB 		bl	keypad_scan
 2301 02e8 0030A0E1 		mov	r3, r0
 2302 02ec FF0053E3 		cmp	r3, #255
 2303 02f0 FBFFFF1A 		bne	.L28
  90:../src/keypad.c ****         sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2304              		.loc 1 90 0 is_stmt 1
 2305 02f4 6400A0E3 		mov	r0, #100
 2306 02f8 FEFFFFEB 		bl	sw_delay_ms
  91:../src/keypad.c ****     }         
 2307              		.loc 1 91 0
 2308 02fc 0000A0E1 		mov	r0, r0	@ nop
  85:../src/keypad.c ****         while( keypad_scan()!= scancode );
 2309              		.loc 1 85 0
 2310 0300 EAFFFFEA 		b	.L26
 2311              	.L30:
  92:../src/keypad.c **** }
 2312              		.loc 1 92 0
 2313 0304 0CD04BE2 		sub	sp, fp, #12
 2314 0308 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2315 030c 1EFF2FE1 		bx	lr
 2316              		.cfi_endproc
 2317              	.LFE3:
 2319              		.align	2
 2320              		.global	keypad_wait_keyup
 2322              	keypad_wait_keyup:
 2323              	.LFB4:
  93:../src/keypad.c **** 
  94:../src/keypad.c **** void keypad_wait_keyup( uint8 scancode )//bien
  95:../src/keypad.c **** {
 2324              		.loc 1 95 0
 2325              		.cfi_startproc
 2326              		@ Function supports interworking.
 2327              		@ args = 0, pretend = 0, frame = 8
 2328              		@ frame_needed = 1, uses_anonymous_args = 0
 2329 0310 0DC0A0E1 		mov	ip, sp
 2330              	.LCFI8:
 2331              		.cfi_def_cfa_register 12
 2332 0314 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2333 0318 04B04CE2 		sub	fp, ip, #4
 2334              		.cfi_offset 14, -8
 2335              		.cfi_offset 13, -12
 2336              		.cfi_offset 11, -16
 2337              	.LCFI9:
 2338              		.cfi_def_cfa 11, 4
 2339 031c 08D04DE2 		sub	sp, sp, #8
 2340 0320 0030A0E1 		mov	r3, r0
 2341 0324 0D304BE5 		strb	r3, [fp, #-13]
  96:../src/keypad.c **** 	keypad_wait_keydown(scancode);
 2342              		.loc 1 96 0
 2343 0328 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2344 032c 0300A0E1 		mov	r0, r3
 2345 0330 FEFFFFEB 		bl	keypad_wait_keydown
  97:../src/keypad.c **** 	while( keypad_scan()!= KEYPAD_FAILURE );
 2346              		.loc 1 97 0
 2347 0334 0000A0E1 		mov	r0, r0	@ nop
 2348              	.L32:
 2349              		.loc 1 97 0 is_stmt 0 discriminator 1
 2350 0338 FEFFFFEB 		bl	keypad_scan
 2351 033c 0030A0E1 		mov	r3, r0
 2352 0340 FF0053E3 		cmp	r3, #255
 2353 0344 FBFFFF1A 		bne	.L32
  98:../src/keypad.c **** 
  99:../src/keypad.c **** 
 100:../src/keypad.c **** }
 2354              		.loc 1 100 0 is_stmt 1
 2355 0348 0CD04BE2 		sub	sp, fp, #12
 2356 034c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2357 0350 1EFF2FE1 		bx	lr
 2358              		.cfi_endproc
 2359              	.LFE4:
 2361              		.align	2
 2362              		.global	keypad_wait_any_keydown
 2364              	keypad_wait_any_keydown:
 2365              	.LFB5:
 101:../src/keypad.c **** 
 102:../src/keypad.c **** void keypad_wait_any_keydown( void )
 103:../src/keypad.c **** {
 2366              		.loc 1 103 0
 2367              		.cfi_startproc
 2368              		@ Function supports interworking.
 2369              		@ args = 0, pretend = 0, frame = 0
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371 0354 0DC0A0E1 		mov	ip, sp
 2372              	.LCFI10:
 2373              		.cfi_def_cfa_register 12
 2374 0358 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2375 035c 04B04CE2 		sub	fp, ip, #4
 2376              		.cfi_offset 14, -8
 2377              		.cfi_offset 13, -12
 2378              		.cfi_offset 11, -16
 2379              	.LCFI11:
 2380              		.cfi_def_cfa 11, 4
 104:../src/keypad.c **** 	while( keypad_scan() == KEYPAD_FAILURE);
 2381              		.loc 1 104 0
 2382 0360 0000A0E1 		mov	r0, r0	@ nop
 2383              	.L34:
 2384              		.loc 1 104 0 is_stmt 0 discriminator 1
 2385 0364 FEFFFFEB 		bl	keypad_scan
 2386 0368 0030A0E1 		mov	r3, r0
 2387 036c FF0053E3 		cmp	r3, #255
 2388 0370 FBFFFF0A 		beq	.L34
 105:../src/keypad.c **** }
 2389              		.loc 1 105 0 is_stmt 1
 2390 0374 0CD04BE2 		sub	sp, fp, #12
 2391 0378 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2392 037c 1EFF2FE1 		bx	lr
 2393              		.cfi_endproc
 2394              	.LFE5:
 2396              		.align	2
 2397              		.global	keypad_wait_any_keyup
 2399              	keypad_wait_any_keyup:
 2400              	.LFB6:
 106:../src/keypad.c **** 
 107:../src/keypad.c **** void keypad_wait_any_keyup( void )
 108:../src/keypad.c **** {
 2401              		.loc 1 108 0
 2402              		.cfi_startproc
 2403              		@ Function supports interworking.
 2404              		@ args = 0, pretend = 0, frame = 0
 2405              		@ frame_needed = 1, uses_anonymous_args = 0
 2406 0380 0DC0A0E1 		mov	ip, sp
 2407              	.LCFI12:
 2408              		.cfi_def_cfa_register 12
 2409 0384 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2410 0388 04B04CE2 		sub	fp, ip, #4
 2411              		.cfi_offset 14, -8
 2412              		.cfi_offset 13, -12
 2413              		.cfi_offset 11, -16
 2414              	.LCFI13:
 2415              		.cfi_def_cfa 11, 4
 109:../src/keypad.c **** 	keypad_wait_any_keydown();
 2416              		.loc 1 109 0
 2417 038c FEFFFFEB 		bl	keypad_wait_any_keydown
 110:../src/keypad.c **** 	while( keypad_scan() == KEYPAD_FAILURE);
 2418              		.loc 1 110 0
 2419 0390 0000A0E1 		mov	r0, r0	@ nop
 2420              	.L36:
 2421              		.loc 1 110 0 is_stmt 0 discriminator 1
 2422 0394 FEFFFFEB 		bl	keypad_scan
 2423 0398 0030A0E1 		mov	r3, r0
 2424 039c FF0053E3 		cmp	r3, #255
 2425 03a0 FBFFFF0A 		beq	.L36
 111:../src/keypad.c **** }
 2426              		.loc 1 111 0 is_stmt 1
 2427 03a4 0CD04BE2 		sub	sp, fp, #12
 2428 03a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2429 03ac 1EFF2FE1 		bx	lr
 2430              		.cfi_endproc
 2431              	.LFE6:
 2433              		.align	2
 2434              		.global	keypad_getchar
 2436              	keypad_getchar:
 2437              	.LFB7:
 112:../src/keypad.c **** 
 113:../src/keypad.c **** uint8 keypad_getchar( void )
 114:../src/keypad.c **** {
 2438              		.loc 1 114 0
 2439              		.cfi_startproc
 2440              		@ Function supports interworking.
 2441              		@ args = 0, pretend = 0, frame = 8
 2442              		@ frame_needed = 1, uses_anonymous_args = 0
 2443 03b0 0DC0A0E1 		mov	ip, sp
 2444              	.LCFI14:
 2445              		.cfi_def_cfa_register 12
 2446 03b4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2447 03b8 04B04CE2 		sub	fp, ip, #4
 2448              		.cfi_offset 14, -8
 2449              		.cfi_offset 13, -12
 2450              		.cfi_offset 11, -16
 2451              	.LCFI15:
 2452              		.cfi_def_cfa 11, 4
 2453 03bc 08D04DE2 		sub	sp, sp, #8
 115:../src/keypad.c **** 	uint8 scancode;
 116:../src/keypad.c **** 		keypad_wait_any_keydown();
 2454              		.loc 1 116 0
 2455 03c0 FEFFFFEB 		bl	keypad_wait_any_keydown
 117:../src/keypad.c **** 	    scancode = keypad_scan();
 2456              		.loc 1 117 0
 2457 03c4 FEFFFFEB 		bl	keypad_scan
 2458 03c8 0030A0E1 		mov	r3, r0
 2459 03cc 0D304BE5 		strb	r3, [fp, #-13]
 118:../src/keypad.c **** 	    while( keypad_scan() != KEYPAD_FAILURE );
 2460              		.loc 1 118 0
 2461 03d0 0000A0E1 		mov	r0, r0	@ nop
 2462              	.L38:
 2463              		.loc 1 118 0 is_stmt 0 discriminator 1
 2464 03d4 FEFFFFEB 		bl	keypad_scan
 2465 03d8 0030A0E1 		mov	r3, r0
 2466 03dc FF0053E3 		cmp	r3, #255
 2467 03e0 FBFFFF1A 		bne	.L38
 119:../src/keypad.c **** 	    sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2468              		.loc 1 119 0 is_stmt 1
 2469 03e4 6400A0E3 		mov	r0, #100
 2470 03e8 FEFFFFEB 		bl	sw_delay_ms
 120:../src/keypad.c **** 	    return scancode;
 2471              		.loc 1 120 0
 2472 03ec 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 121:../src/keypad.c **** 
 122:../src/keypad.c **** }
 2473              		.loc 1 122 0
 2474 03f0 0300A0E1 		mov	r0, r3
 2475 03f4 0CD04BE2 		sub	sp, fp, #12
 2476 03f8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2477 03fc 1EFF2FE1 		bx	lr
 2478              		.cfi_endproc
 2479              	.LFE7:
 2481              		.align	2
 2482              		.global	keypad_getchartime
 2484              	keypad_getchartime:
 2485              	.LFB8:
 123:../src/keypad.c **** 
 124:../src/keypad.c **** uint8 keypad_getchartime( uint16 *ms )
 125:../src/keypad.c **** {
 2486              		.loc 1 125 0
 2487              		.cfi_startproc
 2488              		@ Function supports interworking.
 2489              		@ args = 0, pretend = 0, frame = 16
 2490              		@ frame_needed = 1, uses_anonymous_args = 0
 2491 0400 0DC0A0E1 		mov	ip, sp
 2492              	.LCFI16:
 2493              		.cfi_def_cfa_register 12
 2494 0404 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2495 0408 04B04CE2 		sub	fp, ip, #4
 2496              		.cfi_offset 14, -8
 2497              		.cfi_offset 13, -12
 2498              		.cfi_offset 11, -16
 2499              	.LCFI17:
 2500              		.cfi_def_cfa 11, 4
 2501 040c 10D04DE2 		sub	sp, sp, #16
 2502 0410 18000BE5 		str	r0, [fp, #-24]
 126:../src/keypad.c ****     uint8 scancode;
 127:../src/keypad.c **** 
 128:../src/keypad.c ****     while( keypad_scan() == KEYPAD_FAILURE);
 2503              		.loc 1 128 0
 2504 0414 0000A0E1 		mov	r0, r0	@ nop
 2505              	.L40:
 2506              		.loc 1 128 0 is_stmt 0 discriminator 1
 2507 0418 FEFFFFEB 		bl	keypad_scan
 2508 041c 0030A0E1 		mov	r3, r0
 2509 0420 FF0053E3 		cmp	r3, #255
 2510 0424 FBFFFF0A 		beq	.L40
 129:../src/keypad.c ****     timer3_start();
 2511              		.loc 1 129 0 is_stmt 1
 2512 0428 FEFFFFEB 		bl	timer3_start
 130:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2513              		.loc 1 130 0
 2514 042c 1E00A0E3 		mov	r0, #30
 2515 0430 FEFFFFEB 		bl	sw_delay_ms
 131:../src/keypad.c **** 
 132:../src/keypad.c ****     scancode = keypad_getchar();
 2516              		.loc 1 132 0
 2517 0434 FEFFFFEB 		bl	keypad_getchar
 2518 0438 0030A0E1 		mov	r3, r0
 2519 043c 0D304BE5 		strb	r3, [fp, #-13]
 133:../src/keypad.c **** 
 134:../src/keypad.c ****     while( keypad_scan() != KEYPAD_FAILURE );
 2520              		.loc 1 134 0
 2521 0440 0000A0E1 		mov	r0, r0	@ nop
 2522              	.L41:
 2523              		.loc 1 134 0 is_stmt 0 discriminator 1
 2524 0444 FEFFFFEB 		bl	keypad_scan
 2525 0448 0030A0E1 		mov	r3, r0
 2526 044c FF0053E3 		cmp	r3, #255
 2527 0450 FBFFFF1A 		bne	.L41
 135:../src/keypad.c ****     *ms = timer3_stop() / 10;
 2528              		.loc 1 135 0 is_stmt 1
 2529 0454 FEFFFFEB 		bl	timer3_stop
 2530 0458 0030A0E1 		mov	r3, r0
 2531 045c 0320A0E1 		mov	r2, r3
 2532 0460 30309FE5 		ldr	r3, .L42
 2533 0464 921383E0 		umull	r1, r3, r2, r3
 2534 0468 A331A0E1 		mov	r3, r3, lsr #3
 2535 046c 0338A0E1 		mov	r3, r3, asl #16
 2536 0470 2328A0E1 		mov	r2, r3, lsr #16
 2537 0474 18301BE5 		ldr	r3, [fp, #-24]
 2538 0478 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 136:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2539              		.loc 1 136 0
 2540 047c 6400A0E3 		mov	r0, #100
 2541 0480 FEFFFFEB 		bl	sw_delay_ms
 137:../src/keypad.c **** 
 138:../src/keypad.c ****     return scancode;
 2542              		.loc 1 138 0
 2543 0484 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 139:../src/keypad.c **** 
 140:../src/keypad.c **** }
 2544              		.loc 1 140 0
 2545 0488 0300A0E1 		mov	r0, r3
 2546 048c 0CD04BE2 		sub	sp, fp, #12
 2547 0490 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2548 0494 1EFF2FE1 		bx	lr
 2549              	.L43:
 2550              		.align	2
 2551              	.L42:
 2552 0498 CDCCCCCC 		.word	-858993459
 2553              		.cfi_endproc
 2554              	.LFE8:
 2556              		.align	2
 2557              		.global	keypad_timeout_getchar
 2559              	keypad_timeout_getchar:
 2560              	.LFB9:
 141:../src/keypad.c **** 
 142:../src/keypad.c **** uint8 keypad_timeout_getchar( uint16 ms )//la ultima
 143:../src/keypad.c **** {
 2561              		.loc 1 143 0
 2562              		.cfi_startproc
 2563              		@ Function supports interworking.
 2564              		@ args = 0, pretend = 0, frame = 16
 2565              		@ frame_needed = 1, uses_anonymous_args = 0
 2566 049c 0DC0A0E1 		mov	ip, sp
 2567              	.LCFI18:
 2568              		.cfi_def_cfa_register 12
 2569 04a0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2570 04a4 04B04CE2 		sub	fp, ip, #4
 2571              		.cfi_offset 14, -8
 2572              		.cfi_offset 13, -12
 2573              		.cfi_offset 11, -16
 2574              	.LCFI19:
 2575              		.cfi_def_cfa 11, 4
 2576 04a8 10D04DE2 		sub	sp, sp, #16
 2577 04ac 0030A0E1 		mov	r3, r0
 2578 04b0 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 144:../src/keypad.c **** 	 uint8 scancode;
 145:../src/keypad.c **** 
 146:../src/keypad.c **** 	timer3_start_timeout( ms );
 2579              		.loc 1 146 0
 2580 04b4 B6315BE1 		ldrh	r3, [fp, #-22]
 2581 04b8 0300A0E1 		mov	r0, r3
 2582 04bc FEFFFFEB 		bl	timer3_start_timeout
 147:../src/keypad.c **** 	while((!(timer3_timeout())) || keypad_scan() == KEYPAD_FAILURE);
 2583              		.loc 1 147 0
 2584 04c0 0000A0E1 		mov	r0, r0	@ nop
 2585              	.L45:
 2586              		.loc 1 147 0 is_stmt 0 discriminator 1
 2587 04c4 FEFFFFEB 		bl	timer3_timeout
 2588 04c8 0030A0E1 		mov	r3, r0
 2589 04cc 000053E3 		cmp	r3, #0
 2590 04d0 FBFFFF0A 		beq	.L45
 2591              		.loc 1 147 0 discriminator 2
 2592 04d4 FEFFFFEB 		bl	keypad_scan
 2593 04d8 0030A0E1 		mov	r3, r0
 2594 04dc FF0053E3 		cmp	r3, #255
 2595 04e0 F7FFFF0A 		beq	.L45
 148:../src/keypad.c **** 	sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2596              		.loc 1 148 0 is_stmt 1
 2597 04e4 1E00A0E3 		mov	r0, #30
 2598 04e8 FEFFFFEB 		bl	sw_delay_ms
 149:../src/keypad.c **** 	scancode = keypad_getchar();
 2599              		.loc 1 149 0
 2600 04ec FEFFFFEB 		bl	keypad_getchar
 2601 04f0 0030A0E1 		mov	r3, r0
 2602 04f4 0D304BE5 		strb	r3, [fp, #-13]
 150:../src/keypad.c **** 
 151:../src/keypad.c **** 	return scancode;
 2603              		.loc 1 151 0
 2604 04f8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 152:../src/keypad.c **** }
 2605              		.loc 1 152 0
 2606 04fc 0300A0E1 		mov	r0, r3
 2607 0500 0CD04BE2 		sub	sp, fp, #12
 2608 0504 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2609 0508 1EFF2FE1 		bx	lr
 2610              		.cfi_endproc
 2611              	.LFE9:
 2613              		.align	2
 2614              		.global	keypad_open
 2616              	keypad_open:
 2617              	.LFB10:
 153:../src/keypad.c **** 
 154:../src/keypad.c **** void keypad_open( void (*isr)(void) )
 155:../src/keypad.c **** {
 2618              		.loc 1 155 0
 2619              		.cfi_startproc
 2620              		@ Function supports interworking.
 2621              		@ args = 0, pretend = 0, frame = 8
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623 050c 0DC0A0E1 		mov	ip, sp
 2624              	.LCFI20:
 2625              		.cfi_def_cfa_register 12
 2626 0510 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2627 0514 04B04CE2 		sub	fp, ip, #4
 2628              		.cfi_offset 14, -8
 2629              		.cfi_offset 13, -12
 2630              		.cfi_offset 11, -16
 2631              	.LCFI21:
 2632              		.cfi_def_cfa 11, 4
 2633 0518 08D04DE2 		sub	sp, sp, #8
 2634 051c 10000BE5 		str	r0, [fp, #-16]
 156:../src/keypad.c ****     pISR_KEYPAD   = (uint32)isr;
 2635              		.loc 1 156 0
 2636 0520 3C309FE5 		ldr	r3, .L47
 2637 0524 10201BE5 		ldr	r2, [fp, #-16]
 2638 0528 002083E5 		str	r2, [r3, #0]
 157:../src/keypad.c ****     EXTINTPND = ~0;
 2639              		.loc 1 157 0
 2640 052c 34309FE5 		ldr	r3, .L47+4
 2641 0530 0020E0E3 		mvn	r2, #0
 2642 0534 002083E5 		str	r2, [r3, #0]
 158:../src/keypad.c ****     I_ISPC    = (1<<24);
 2643              		.loc 1 158 0
 2644 0538 2C309FE5 		ldr	r3, .L47+8
 2645 053c 0124A0E3 		mov	r2, #16777216
 2646 0540 002083E5 		str	r2, [r3, #0]
 159:../src/keypad.c ****     INTMSK   &= ~(1 << 26 | 1 << 24);
 2647              		.loc 1 159 0
 2648 0544 24309FE5 		ldr	r3, .L47+12
 2649 0548 20209FE5 		ldr	r2, .L47+12
 2650 054c 002092E5 		ldr	r2, [r2, #0]
 2651 0550 0524C2E3 		bic	r2, r2, #83886080
 2652 0554 002083E5 		str	r2, [r3, #0]
 160:../src/keypad.c **** }
 2653              		.loc 1 160 0
 2654 0558 0CD04BE2 		sub	sp, fp, #12
 2655 055c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2656 0560 1EFF2FE1 		bx	lr
 2657              	.L48:
 2658              		.align	2
 2659              	.L47:
 2660 0564 80FF7F0C 		.word	209715072
 2661 0568 5400D201 		.word	30539860
 2662 056c 2400E001 		.word	31457316
 2663 0570 0C00E001 		.word	31457292
 2664              		.cfi_endproc
 2665              	.LFE10:
 2667              		.align	2
 2668              		.global	keypad_close
 2670              	keypad_close:
 2671              	.LFB11:
 161:../src/keypad.c **** 
 162:../src/keypad.c **** void keypad_close( void )
 163:../src/keypad.c **** {
 2672              		.loc 1 163 0
 2673              		.cfi_startproc
 2674              		@ Function supports interworking.
 2675              		@ args = 0, pretend = 0, frame = 0
 2676              		@ frame_needed = 1, uses_anonymous_args = 0
 2677 0574 0DC0A0E1 		mov	ip, sp
 2678              	.LCFI22:
 2679              		.cfi_def_cfa_register 12
 2680 0578 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2681 057c 04B04CE2 		sub	fp, ip, #4
 2682              		.cfi_offset 14, -8
 2683              		.cfi_offset 13, -12
 2684              		.cfi_offset 11, -16
 2685              	.LCFI23:
 2686              		.cfi_def_cfa 11, 4
 164:../src/keypad.c ****     INTMSK  |= (1 << 24);
 2687              		.loc 1 164 0
 2688 0580 24309FE5 		ldr	r3, .L50
 2689 0584 20209FE5 		ldr	r2, .L50
 2690 0588 002092E5 		ldr	r2, [r2, #0]
 2691 058c 012482E3 		orr	r2, r2, #16777216
 2692 0590 002083E5 		str	r2, [r3, #0]
 165:../src/keypad.c ****     pISR_KEYPAD  = (uint32)isr_KEYPAD_dummy ;
 2693              		.loc 1 165 0
 2694 0594 14309FE5 		ldr	r3, .L50+4
 2695 0598 14209FE5 		ldr	r2, .L50+8
 2696 059c 002083E5 		str	r2, [r3, #0]
 166:../src/keypad.c **** }
 2697              		.loc 1 166 0
 2698 05a0 0CD04BE2 		sub	sp, fp, #12
 2699 05a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2700 05a8 1EFF2FE1 		bx	lr
 2701              	.L51:
 2702              		.align	2
 2703              	.L50:
 2704 05ac 0C00E001 		.word	31457292
 2705 05b0 80FF7F0C 		.word	209715072
 2706 05b4 00000000 		.word	isr_KEYPAD_dummy
 2707              		.cfi_endproc
 2708              	.LFE11:
 2710              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keypad.c
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:1959   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:1962   .text:00000000 keypad_init
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:1991   .text:0000001c keypad_scan
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2200   .text:00000230 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2207   .text:00000240 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2210   .text:00000240 keypad_status
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2258   .text:00000294 keypad_wait_keydown
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2322   .text:00000310 keypad_wait_keyup
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2364   .text:00000354 keypad_wait_any_keydown
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2399   .text:00000380 keypad_wait_any_keyup
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2436   .text:000003b0 keypad_getchar
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2484   .text:00000400 keypad_getchartime
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2552   .text:00000498 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2556   .text:0000049c $a
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2559   .text:0000049c keypad_timeout_getchar
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2616   .text:0000050c keypad_open
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2660   .text:00000564 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2667   .text:00000574 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2670   .text:00000574 keypad_close
C:\Users\USUARI~1\AppData\Local\Temp\ccliHz1h.s:2704   .text:000005ac $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timers_init
sw_delay_ms
timer3_start
timer3_stop
timer3_start_timeout
timer3_timeout
isr_KEYPAD_dummy
